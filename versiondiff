import argparse

from pkg_resources import parse_version

try:
    import ConfigParser
except ImportError:
    import configparser as ConfigParser



class VersionSetup(object):
    """represents a version setup for buildout"""
    def __init__(self, filepath, *args, **kwargs):
        self.filename = filepath
        self.config = ConfigParser.ConfigParser()
        self.config.read(filepath)

    def __getitem__(self,k):
        return self.config.get('versions', k)

    def __iter__(self):
        return self.config.options('versions').__iter__()

    def __contains__(self,k):
        try:
            return (k in self.config.options('versions'))
        except ConfigParser.NoSectionError as e:
            e.message = e.message + (" in file %s" % self.filename)
            raise e


def printDiffs(d1, d2, only_newer=False):
    """print differing items of dictionaries to stdout"""
    for key in d1:
        if key in d2:
            v1 = parse_version(d1[key])
            v2 = parse_version(d2[key])
            # print the version difference, don't print the version
            # difference if only_newer is activated and the version of
            # the second dict is smaller (older) then the version of
            # the first dict
            if ((v1 != v2) and ((not only_newer) or (v1 < v2))):
                print("%s\n\t%s\t%s" % (key, str(v1), str(v2)))


def printNotMatching(d1, d2):
    """print versions set in only one of the files"""
    print("Versions set in %s, but not set in %s" % (d1.filename, d2.filename))
    for key in d1:
        if not (key in d2):
            print("%s: %s" % (key, d1[key]))
    print("")
    print("Versions set in %s, but not set in %s" % (d2.filename, d1.filename))
    for key in d2:
        if not (key in d1):
            print("%s: %s" % (key, d2[key]))


argp = argparse.ArgumentParser(
    description='Determin differences between plone version settings')
argp.add_argument('filename1', metavar='FILE1',
                  help='filename of the first config file to read')
argp.add_argument('filename2', metavar='FILE2',
                  help='filename of the second config file to read')
argp.add_argument('-a', '--show-all', default=False, action='store_true',
                  help='When passed, the program will show all differences, '
                       'not only those of versions set in both files.')
argp.add_argument('-n', '--only-newer', default=False, action='store_true',
                  help='When passed, the program will only show differences '
                  'when the version of FILE2 is higher than the version of '
                  'FILE1')

args = argp.parse_args()

conf1 = VersionSetup(args.filename1)

conf2 = VersionSetup(args.filename2)

printDiffs(conf1, conf2, only_newer=args.only_newer)

if args.show_all:
    print("")
    printNotMatching(conf1, conf2)
